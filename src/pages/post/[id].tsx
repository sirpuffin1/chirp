import type { GetStaticPaths, GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { api } from "~/utils/api";
import Layout from "~/components/Layout";

const SinglePostPage: NextPage<{ id: string }> = ({ id }) => {
  const { data } = api.posts.getById.useQuery({
    id
  });

  if (!data) return <div>404</div>;

  return (
    <>
      <Head>
        <title>{`${data.post.content} - ${data.author.username}`}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <PostView {...data} />
      </Layout>
    </>
  );
};


import { generateSSGHelper } from "~/server/helpers/ssgHelper";
import PostView from "~/components/PostView";


export const getStaticProps: GetStaticProps = async (context) => {
  const ssg = generateSSGHelper()

  const id = context.params?.id;

  if (typeof id !== "string") throw new Error("no slug")

  await ssg.posts.getById.prefetch({ id })

  return {
    props: {
        trpcState: ssg.dehydrate(),
        id
    },
  };
}

export const getStaticPaths: GetStaticPaths = () => {
    return {
        paths:[],
        fallback: "blocking"
    }
}

export default SinglePostPage;
